@page "/admin/users"
@using SharedDtos
@using PredictionsClient.Services
@inject AdminService AdminService

<h4>User Management</h4>

@if (users == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else if (!users.Any())
{
    <div class="alert alert-info">No users found</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Username</th>
                    <th>Points</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users.OrderBy(u => u.Username))
                {
                    <tr class="@(user.Role == "Admin" ? "admin-row" : "")">
                        <td>@user.Username</td>
                        <td>@user.Points</td>
                        <td>
                            <span class="role-badge @user.Role.ToLower()">
                                @user.Role
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<UserDto> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await AdminService.GetUsersAsync();
    }
}