// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi_pred.Data;

#nullable disable

namespace webapi_pred.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250422201459_SeedMatches")]
    partial class SeedMatches
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi_pred.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Team1Id")
                        .HasColumnType("int");

                    b.Property<int>("Team1Score")
                        .HasColumnType("int");

                    b.Property<int>("Team2Id")
                        .HasColumnType("int");

                    b.Property<int>("Team2Score")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerTeamId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("MatchDate");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasIndex("WinnerTeamId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            MatchDate = new DateTime(2025, 5, 2, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 11,
                            Team1Score = 0,
                            Team2Id = 1,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 2,
                            MatchDate = new DateTime(2025, 5, 2, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 3,
                            Team1Score = 0,
                            Team2Id = 10,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 3,
                            MatchDate = new DateTime(2025, 5, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 12,
                            Team1Score = 0,
                            Team2Id = 4,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 4,
                            MatchDate = new DateTime(2025, 5, 3, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 8,
                            Team1Score = 0,
                            Team2Id = 12,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 5,
                            MatchDate = new DateTime(2025, 5, 3, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 3,
                            Team1Score = 0,
                            Team2Id = 2,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 6,
                            MatchDate = new DateTime(2025, 5, 3, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 11,
                            Team1Score = 0,
                            Team2Id = 9,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 7,
                            MatchDate = new DateTime(2025, 5, 3, 23, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 6,
                            Team1Score = 0,
                            Team2Id = 7,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 8,
                            MatchDate = new DateTime(2025, 5, 4, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 5,
                            Team1Score = 0,
                            Team2Id = 7,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 9,
                            MatchDate = new DateTime(2025, 5, 4, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 4,
                            Team1Score = 0,
                            Team2Id = 10,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 10,
                            MatchDate = new DateTime(2025, 5, 4, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 1,
                            Team1Score = 0,
                            Team2Id = 6,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 11,
                            MatchDate = new DateTime(2025, 5, 9, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 12,
                            Team1Score = 0,
                            Team2Id = 7,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 12,
                            MatchDate = new DateTime(2025, 5, 9, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 2,
                            Team1Score = 0,
                            Team2Id = 9,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 13,
                            MatchDate = new DateTime(2025, 5, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 1,
                            Team1Score = 0,
                            Team2Id = 4,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 14,
                            MatchDate = new DateTime(2025, 5, 10, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 7,
                            Team1Score = 0,
                            Team2Id = 4,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 15,
                            MatchDate = new DateTime(2025, 5, 10, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 8,
                            Team1Score = 0,
                            Team2Id = 5,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 16,
                            MatchDate = new DateTime(2025, 5, 10, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 6,
                            Team1Score = 0,
                            Team2Id = 12,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 17,
                            MatchDate = new DateTime(2025, 5, 10, 23, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 3,
                            Team1Score = 0,
                            Team2Id = 9,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 18,
                            MatchDate = new DateTime(2025, 5, 11, 19, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 2,
                            Team1Score = 0,
                            Team2Id = 11,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 19,
                            MatchDate = new DateTime(2025, 5, 11, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 5,
                            Team1Score = 0,
                            Team2Id = 1,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 20,
                            MatchDate = new DateTime(2025, 5, 11, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 10,
                            Team1Score = 0,
                            Team2Id = 8,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 21,
                            MatchDate = new DateTime(2025, 5, 16, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 9,
                            Team1Score = 0,
                            Team2Id = 5,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 22,
                            MatchDate = new DateTime(2025, 5, 16, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 3,
                            Team1Score = 0,
                            Team2Id = 8,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 23,
                            MatchDate = new DateTime(2025, 5, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 2,
                            Team1Score = 0,
                            Team2Id = 6,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 24,
                            MatchDate = new DateTime(2025, 5, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 2,
                            Team1Score = 0,
                            Team2Id = 1,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 25,
                            MatchDate = new DateTime(2025, 5, 17, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 4,
                            Team1Score = 0,
                            Team2Id = 6,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 26,
                            MatchDate = new DateTime(2025, 5, 17, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 2,
                            Team1Score = 0,
                            Team2Id = 6,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 27,
                            MatchDate = new DateTime(2025, 5, 17, 23, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 10,
                            Team1Score = 0,
                            Team2Id = 11,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 28,
                            MatchDate = new DateTime(2025, 5, 18, 19, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 5,
                            Team1Score = 0,
                            Team2Id = 2,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 29,
                            MatchDate = new DateTime(2025, 5, 18, 20, 30, 0, 0, DateTimeKind.Utc),
                            Team1Id = 10,
                            Team1Score = 0,
                            Team2Id = 9,
                            Team2Score = 0
                        },
                        new
                        {
                            MatchId = 30,
                            MatchDate = new DateTime(2025, 5, 18, 22, 0, 0, 0, DateTimeKind.Utc),
                            Team1Id = 8,
                            Team1Score = 0,
                            Team2Id = 11,
                            Team2Score = 0
                        });
                });

            modelBuilder.Entity("webapi_pred.Models.Prediction", b =>
                {
                    b.Property<int>("PredictionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredictionId"));

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("PredictedTeam1Score")
                        .HasColumnType("int");

                    b.Property<int>("PredictedTeam2Score")
                        .HasColumnType("int");

                    b.Property<int>("PredictedWinnerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PredictionId");

                    b.HasIndex("MatchId");

                    b.HasIndex("PredictedWinnerId");

                    b.HasIndex("UserId");

                    b.ToTable("Predictions");
                });

            modelBuilder.Entity("webapi_pred.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teamname")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeamId");

                    b.HasIndex("Teamname")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Teamname = "Atlanta Faze"
                        },
                        new
                        {
                            TeamId = 2,
                            Teamname = "Boston Breach"
                        },
                        new
                        {
                            TeamId = 3,
                            Teamname = "Carolina Ravens"
                        },
                        new
                        {
                            TeamId = 4,
                            Teamname = "Cloud9 New York"
                        },
                        new
                        {
                            TeamId = 5,
                            Teamname = "Los Angeles Guerrilas M8"
                        },
                        new
                        {
                            TeamId = 6,
                            Teamname = "Los Angeles Thieves"
                        },
                        new
                        {
                            TeamId = 7,
                            Teamname = "Miami Heretics"
                        },
                        new
                        {
                            TeamId = 8,
                            Teamname = "Minnesota Røkkr"
                        },
                        new
                        {
                            TeamId = 9,
                            Teamname = "Optic Texas"
                        },
                        new
                        {
                            TeamId = 10,
                            Teamname = "Toronto Ultra"
                        },
                        new
                        {
                            TeamId = 11,
                            Teamname = "Vancouver Surge"
                        },
                        new
                        {
                            TeamId = 12,
                            Teamname = "Vegas Falcons"
                        });
                });

            modelBuilder.Entity("webapi_pred.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "1a2b3c4d5e",
                            Points = 0,
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "userpassword",
                            Points = 0,
                            Role = "User",
                            Username = "regularuser"
                        });
                });

            modelBuilder.Entity("webapi_pred.Models.Match", b =>
                {
                    b.HasOne("webapi_pred.Models.Team", "Team1")
                        .WithMany("MatchesAsTeam1")
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("webapi_pred.Models.Team", "Team2")
                        .WithMany("MatchesAsTeam2")
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("webapi_pred.Models.Team", "WinnerTeam")
                        .WithMany("MatchesAsWinner")
                        .HasForeignKey("WinnerTeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("WinnerTeam");
                });

            modelBuilder.Entity("webapi_pred.Models.Prediction", b =>
                {
                    b.HasOne("webapi_pred.Models.Match", "Match")
                        .WithMany("Predictions")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi_pred.Models.Team", "PredictedWinner")
                        .WithMany()
                        .HasForeignKey("PredictedWinnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("webapi_pred.Models.User", "User")
                        .WithMany("Predictions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("PredictedWinner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("webapi_pred.Models.Match", b =>
                {
                    b.Navigation("Predictions");
                });

            modelBuilder.Entity("webapi_pred.Models.Team", b =>
                {
                    b.Navigation("MatchesAsTeam1");

                    b.Navigation("MatchesAsTeam2");

                    b.Navigation("MatchesAsWinner");
                });

            modelBuilder.Entity("webapi_pred.Models.User", b =>
                {
                    b.Navigation("Predictions");
                });
#pragma warning restore 612, 618
        }
    }
}
